// <auto-generated />
using System;
using IRRIGATION.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

namespace IRRIGATIONDLL.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20200826093333_thirdIrr")]
    partial class thirdIrr
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            modelBuilder.Entity("IRRIGATION.Models.COMPANY", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ADDRESS")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<decimal>("ADJId");

                    b.Property<DateTime>("CREATION_DATE");

                    b.Property<string>("FAX")
                        .HasMaxLength(30);

                    b.Property<string>("GOVERNORATE")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("MOBILE")
                        .HasMaxLength(30);

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("NOTE")
                        .HasMaxLength(300);

                    b.Property<string>("PHONE")
                        .HasMaxLength(30);

                    b.Property<decimal>("STAId");

                    b.Property<decimal>("STRId");

                    b.Property<decimal>("USERNB");

                    b.HasKey("Id");

                    b.HasIndex("ADJId");

                    b.HasIndex("STAId");

                    b.HasIndex("STRId");

                    b.ToTable("COMPANY");
                });

            modelBuilder.Entity("IRRIGATION.Models.CONSTANT", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CREATION_DATE");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("NOTE")
                        .HasMaxLength(300);

                    b.Property<string>("ORDER")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("TYPE")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<decimal>("USERNB");

                    b.HasKey("Id");

                    b.ToTable("CONSTANT");
                });

            modelBuilder.Entity("IRRIGATION.Models.PRODUCT", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CREATION_DATE");

                    b.Property<decimal>("KINDId");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("NOTE")
                        .HasMaxLength(500);

                    b.Property<decimal>("USERNB");

                    b.HasKey("Id");

                    b.HasIndex("KINDId");

                    b.ToTable("PRODUCT");
                });

            modelBuilder.Entity("IRRIGATION.Models.SETTING", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CREATION_DATE");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasAnnotation("Comment", "test");

                    b.Property<string>("NOTE")
                        .HasMaxLength(300);

                    b.Property<string>("TITLE")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<decimal>("USERNB");

                    b.Property<string>("VALUE")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("SETTING");
                });

            modelBuilder.Entity("IRRIGATION.Models.COMPANY", b =>
                {
                    b.HasOne("IRRIGATION.Models.CONSTANT", "ADJECTIVE")
                        .WithMany()
                        .HasForeignKey("ADJId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IRRIGATION.Models.CONSTANT", "STATUS")
                        .WithMany()
                        .HasForeignKey("STAId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IRRIGATION.Models.CONSTANT", "STRUCTTYPE")
                        .WithMany()
                        .HasForeignKey("STRId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("IRRIGATION.Models.PRODUCT", b =>
                {
                    b.HasOne("IRRIGATION.Models.CONSTANT", "PRODUCTKIND")
                        .WithMany()
                        .HasForeignKey("KINDId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
